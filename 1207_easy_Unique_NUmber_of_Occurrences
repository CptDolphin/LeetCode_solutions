

Given an array of integers arr, write a function that returns true if and only if the number of occurrences of each value in the array is unique.

 

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
 

Constraints:

1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000

##==========================

var uniqueOccurrences = function(A) {
    const result = {};
    for(const x of A){
        if(x in result){
            result[x]++;
        } else {
            result[x] = 1;
        }
    }
    const all = Object.values(result);
    return new Set(all).size === Object.keys(result).length;
};

#======
# Runtime: 56 ms, faster than 68.43% of JavaScript online submissions for Unique Number of Occurrences.
# Memory Usage: 34.3 MB, less than 100.00% of JavaScript online submissions for Unique Number of Occurrences.

var uniqueOccurrences = function(arr) {
    let obj = {};
    arr.forEach(el => obj[el] === undefined ? obj[el] = 1 : obj[el]++);
    return new Set(Object.values(obj)).size === Object.values(obj).length;
};
