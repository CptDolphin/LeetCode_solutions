303. Range Sum Query - Immutable
Easy

Given an integer array nums, find the sum of the elements between indices i and j (i â‰¤ j), inclusive.

Example:

Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3

Note:

    You may assume that the array does not change.
    There are many calls to sumRange function.

#=====
# Runtime: 84 ms, faster than 97.20% of JavaScript online submissions for Range Sum Query - Immutable.
# Memory Usage: 44.1 MB, less than 100.00% of JavaScript online submissions for Range Sum Query - Immutable.
var NumArray = function(nums) {
    this.result = [];
    let sum = 0;
    this.result = nums.map(num => sum += num)
};

NumArray.prototype.sumRange = function(i, j) {
    return this.result[j] - (i > 0 ? this.result[i-1] : 0);
};
