908. Smallest Range I
Easy

Given an array A of integers, for each integer A[i] we may choose any x with -K <= x <= K, and add x to A[i].

After this process, we have some array B.

Return the smallest possible difference between the maximum value of B and the minimum value of B.

 

Example 1:

Input: A = [1], K = 0
Output: 0
Explanation: B = [1]

Example 2:

Input: A = [0,10], K = 2
Output: 6
Explanation: B = [2,8]

Example 3:

Input: A = [1,3,6], K = 3
Output: 0
Explanation: B = [3,3,3] or B = [4,4,4]

 

Note:

    1 <= A.length <= 10000
    0 <= A[i] <= 10000
    0 <= K <= 10000

#======
# Runtime: 56 ms, faster than 77.71% of JavaScript online submissions for Smallest Range I.
# Memory Usage: 35 MB, less than 100.00% of JavaScript online submissions for Smallest Range I.

var smallestRangeI = function(A, K) {
    return Math.max(0, Math.max.apply(Math, A) - Math.min.apply(Math, A) - (2 * K));
};


#=====
# Runtime: 48 ms, faster than 98.80% of JavaScript online submissions for Smallest Range I.
# Memory Usage: 36.8 MB, less than 100.00% of JavaScript online submissions for Smallest Range I.

let smallestRangeI = function(A, K) {
    let small = Number.MAX_SAFE_INTEGER;
    let large = -Number.MAX_SAFE_INTEGER;
    for (let num of A) {
        small = Math.min(small, num);
        large = Math.max(large, num);
    }
    return Math.max(0, (large - small) - (2 * K));
};


